# Paths for the installer repo
export PK_HOME="${PK_HOME:-$HOME/deskpi-karaoke}"  # cloned git repo
export PK_REMOTE="${PK_REMOTE:-https://github.com/junclemente/deskpi-karaoke.git}"

# Runtime bits
export PK_VENV="$PK_HOME/.venv-pikaraoke"  # venv inside repo
export PK_LOG="$PK_HOME/pikaraoke_output.log"

pk() {
  case "$1" in
    update)
      echo "üì• Updating PiKaraoke *installer* (default branch)..."
      if [ ! -d "$PK_HOME/.git" ]; then
        echo "‚ÑπÔ∏è $PK_HOME is not a git repo. Cloning fresh..."
        rm -rf "$PK_HOME" && git clone "$PK_REMOTE" "$PK_HOME" || { echo "‚ùå Clone failed"; return 1; }
      fi
      git -C "$PK_HOME" pull --ff-only || { echo "‚ùå Git update failed"; return 1; }
      echo "‚ñ∂Ô∏è Applying installer updates..."
      python3 "$PK_HOME/install.py" || { echo "‚ùå Installer update failed"; return 1; }
      echo "‚ôªÔ∏è Rebooting to let PiKaraoke self-check run on boot..."
      sudo reboot
      ;;

    devupdate|dev)
      echo "üõ† Updating PiKaraoke *installer* (dev branch)..."
      if [ ! -d "$PK_HOME/.git" ]; then
        echo "‚ÑπÔ∏è $PK_HOME is not a git repo. Cloning fresh..."
        rm -rf "$PK_HOME" && git clone "$PK_REMOTE" "$PK_HOME" || { echo "‚ùå Clone failed"; return 1; }
      fi
      git -C "$PK_HOME" fetch --prune || { echo "‚ùå git fetch failed"; return 1; }
      git -C "$PK_HOME" rev-parse --verify dev >/dev/null 2>&1 \
        || git -C "$PK_HOME" checkout -t origin/dev || true
      git -C "$PK_HOME" checkout dev || { echo "‚ùå Could not switch to dev branch"; return 1; }
      git -C "$PK_HOME" pull --ff-only origin dev || { echo "‚ùå Git update failed"; return 1; }
      echo "‚ñ∂Ô∏è Applying installer updates from dev..."
      python3 "$PK_HOME/install.py" || { echo "‚ùå Installer update failed"; return 1; }
      echo "‚ôªÔ∏è Rebooting to let PiKaraoke self-check run on boot..."
      sudo reboot
      ;;

    reboot)
      echo "‚ôªÔ∏è Rebooting Raspberry Pi..."
      sudo reboot
      ;;

    help|*|"")
      echo ""
      echo "üìå PiKaraoke Commands:"
      echo "   pk update     ‚Üí Update installer (default branch) & reboot"
      echo "   pk devupdate  ‚Üí Update installer (dev branch) & reboot"
      echo "   pk reboot     ‚Üí Reboot the Raspberry Pi"
      echo "   pk help       ‚Üí Show this help message"
      echo ""
      ;;
  esac
}
